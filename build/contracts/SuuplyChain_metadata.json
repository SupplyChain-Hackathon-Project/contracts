{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "parent_itemId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "children_itemIds",
						"type": "uint256[]"
					}
				],
				"name": "History",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_node",
						"type": "uint256"
					}
				],
				"name": "StartingNode",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					}
				],
				"name": "UserAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_orderid",
						"type": "uint256"
					}
				],
				"name": "orderReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_orderid",
						"type": "uint256"
					}
				],
				"name": "orderRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_orderid",
						"type": "uint256"
					}
				],
				"name": "orderShipped",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_userName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "addNewUser",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_itemName",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "_isRetail",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_cost",
						"type": "uint256"
					}
				],
				"name": "addStartingNode",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_orderID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_itemName",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "_isRetail",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_cost",
						"type": "uint256"
					}
				],
				"name": "addTransaction",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					}
				],
				"name": "getHistory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					}
				],
				"name": "getReceivedOrders",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "itemId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "buyerId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "itemName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "orderId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isShipped",
								"type": "bool"
							}
						],
						"internalType": "struct User.ReceivedOrder[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					}
				],
				"name": "getRequestedOrders",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "itemId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sellerId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "itemName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "orderId",
								"type": "uint256"
							}
						],
						"internalType": "struct User.RequestedOrder[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					}
				],
				"name": "getStock",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "itemId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "itemName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isRetail",
								"type": "bool"
							}
						],
						"internalType": "struct User.Stock[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getUsers",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "userId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							}
						],
						"internalType": "struct User.UserCredentials[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_userId",
						"type": "uint256"
					}
				],
				"name": "getuserMetadata",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "itemId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "itemName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isRetail",
								"type": "bool"
							}
						],
						"internalType": "struct User.Stock[]",
						"name": "",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "itemId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "buyerId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "itemName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "orderId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isShipped",
								"type": "bool"
							}
						],
						"internalType": "struct User.ReceivedOrder[]",
						"name": "",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "itemId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sellerId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "itemName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "orderId",
								"type": "uint256"
							}
						],
						"internalType": "struct User.RequestedOrder[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_node",
						"type": "uint256"
					}
				],
				"name": "isLastNode",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "ownerId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "itemid",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isRetail",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_buyerId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_itemName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_sellerId",
						"type": "uint256"
					}
				],
				"name": "orderRequest",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_orderID",
						"type": "uint256"
					}
				],
				"name": "orderShipping",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userIdtoAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"SupplyChain.sol": "SupplyChain"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"SupplyChain.sol": {
			"keccak256": "0xc6e91ce79b50664ea49891f367975c9ec155c045fea963e1f8be441b69cfe3fb",
			"urls": [
				"bzz-raw://90535a64fa9b6948013bff167896610b070db69ca38b94644b70806e7aa20425",
				"dweb:/ipfs/QmQo9HkdEv7ves6LJKxWVUvyHi81mfjpRL1px1WYSNGAMg"
			]
		},
		"user.sol": {
			"keccak256": "0x52b2454b0bdcd1cbb5dc868675dff79324bf44e1437cedd47a790b6c138a6caf",
			"urls": [
				"bzz-raw://ffdc52b4657c610ba32cc5730904ca8384562e4fa345572a0983e0438e89982f",
				"dweb:/ipfs/QmQY56H9dBWAMucFQSSahvzDgeuKL9Vx1fWHEiLJ8MVhe8"
			]
		}
	},
	"version": 1
}
